{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"React\"","webpack:///./src/components/Providers.tsx","webpack:///./src/components/providers/Editor.tsx","webpack:///external \"MaterialUI\"","webpack:///./src/model/Coordinate.ts","webpack:///./src/components/renderer/3D/shaders/ShaderUtility.ts","webpack:///./src/model/WrappedEventModel.ts","webpack:///./src/components/renderer/3D/shaders/ts/VertexShader.ts","webpack:///./src/model/Camera.ts","webpack:///./src/components/inspector/controls/NumericControl.tsx","webpack:///./src/components/renderer/3D/GLUtilities.ts","webpack:///./src/components/renderer/3D/shaders/ts/FragmentShader.ts","webpack:///./src/index.tsx","webpack:///external \"ReactDOM\"","webpack:///./src/components/App.tsx","webpack:///./src/model/Environment.ts","webpack:///./src/model/Field.ts","webpack:///./src/components/CamProjToolBar.tsx","webpack:///./src/components/inspector/InspectorPanel.tsx","webpack:///./src/components/inspector/CameraView.tsx","webpack:///./src/components/inspector/NoSelectedObject.tsx","webpack:///./src/components/inspector/FieldView.tsx","webpack:///./src/components/renderer/EnvironmentRenderer.tsx","webpack:///./src/components/renderer/2D/EnvironmentRenderer2D.tsx","webpack:///./src/components/renderer/3D/EnvironmentRenderer3D.tsx","webpack:///external \"glMatrix\"","webpack:///./src/components/renderer/CanvasController.tsx","webpack:///./src/components/renderer/3D/shaders/BasicShader.ts","webpack:///./src/components/renderer/GridLines.ts","webpack:///./src/components/scene/EnvironmentView.tsx","webpack:///./src/components/scene/EnvironmentListing.tsx"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","React","EnviromentProvider","createContext","useEnvironment","useContext","EditorContext","useEditorState","editor","currentSelectedObject","id","EditorStateProvider","props","setCurrentSelectedObject","useState","currentRenderMode","setRenderMode","editorState","Provider","children","MaterialUI","Coordinate","x","y","z","this","other","XYZ","zero","createShader","gl","src","type","shader","VERTEX_SHADER","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","console","error","getShaderInfoLog","deleteShader","createProgram","vertexShader","fragmentShader","validate","program","attachShader","bindAttribLocation","ATTR_POSITION_LOC","ATTR_POSITION_NAME","ATTR_COLOR_LOC","ATTR_COLOR_NAME","linkProgram","getProgramParameter","LINK_STATUS","validateProgram","VALIDATE_STATUS","getProgramInfoLog","deleteProgram","detachShader","createArrayBufferWithVerticies","verticies","isStatic","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","DYNAMIC_DRAW","coordinateToFloat32Array","coordinates","array","forEach","coord","push","Float32Array","indexArray","vertArray","vertColorArray","vertexArray","createVertexArray","mesh","drawMode","LINES","bindVertexArray","vertexBuffer","enableVertexAttribArray","vertexAttribPointer","FLOAT","vertexCount","length","vertexComponentLength","undefined","colorBuffer","BYTES_PER_ELEMENT","indexBuffer","indexCount","ELEMENT_ARRAY_BUFFER","vertSrc","fragSrc","useProgram","getParameter","CURRENT_PROGRAM","deactivate","drawElements","UNSIGNED_SHORT","drawArrays","generateId","replace","Math","random","toString","EventEnvironment","setup","super","cameraNonRenderPropsModified","cameraRenderPropsModified","fieldDimensionsModified","registerFieldEvents","field","cameras","cam","reigsterCameraEvents","map","EventCamera","camera","addCamera","func","removeIndex","findIndex","splice","ecam","cameraPropsChanged","cameraRenderPropsChanged","EventField","fieldDimensionsChanged","coords","newField","json","jsonObject","JSON","parse","c1","c2","getBoundPoints","jProps","camProps","sensorHeight","sensorWidth","sensorXResolution","sensorYResolution","focalDistance","pitch","yaw","position","eCam","fieldBoundPoints","cameraName","getCameraProperties","stringify","properties","newName","setCameraProperties","setPoints","getPoints","VertexShader","item","getAttribLocation","getUniformLocation","_properties","calculateFOV","horizontalFOV","calculateFOVAngle","verticalFOV","_computedPropreties","atan","distance1","tan","distance2","distance3","cos","distance4","rotate","coordinate","rotatedX","sin","rotatedY","XY","c3","addXY","c4","abs","DefaultCameraProperties","NumericControl","unit","onChange","color","min","max","style","TextField","label","event","number","parseInt","currentTarget","NaN","inputProps","InputProps","endAdornment","InputAdornment","log","vShader","fShader","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","FragmentShader","ReactDOM","render","App","document","getElementById","environment","useEffect","window","addEventListener","e","preventDefault","display","flexDirection","width","height","minHeight","overflow","CamProjToolBar","flex","EnvironmentView","EnvironmentRenderer","InspectorPanel","Field","center","getWidth","getHeight","calcAndSetRemainingPoints","projection","orientate","val","onSegment","check","linesIntersect","a1","a2","b1","b2","orientation1","orientation2","orientation3","orientation4","specialCase1","specialCase2","specialCase3","specialCase4","points","withinField","pointIndex","fieldPoint","extremePoint","intersections","index","currentPoint","nextPoint","AppBar","Toolbar","Typography","variant","Button","onClick","prevMode","input","createElement","hidden","body","appendChild","click","onchange","ev","envFile","target","files","reader","FileReader","readAsText","onload","readerEvent","loadFromJSON","result","removeChild","environmentJSON","getJSONString","blob","Blob","a","fileURL","URL","createObjectURL","setProperty","href","download","revokeObjectURL","inspectElement","NoSelectedObject","CameraView","FieldView","setCameraName","fieldVisible","setFieldVisible","setCamProps","setPosition","useCallback","newProps","setNumericCameraProperty","nonRenderPropsCallback","renderPropsCallback","in","project","letRenderRemoveIndex","element","letNonRenderRemoveIndex","padding","marginTop","marginBottom","setName","Paper","margin","Divider","light","round","getAverageGroundSamplingDistanceX","getAverageGroundSamplingDistanceY","PI","backgroundColor","removeCamera","textAlign","setX","getCenter","setY","setWidth","setHeight","setFromPosition","eField","callback","fieldInCameraProjection","env2d","useMemo","EnvironmentRenderer2D","env3d","EnvironmentRenderer3D","environmentElement","initializeCanvas","ctx","divRef","scale","canvas","offsetWidth","offsetHeight","translate","drawGridLines","spacing","transform","getTransform","invertSelf","transformPoint","DOMPoint","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","drawCoordinatePath","startPoint","scaleScreenDistance","getCanvasScale","fillStyle","fillRect","clearTranslatedCanvas","drawAxisLines","currentSelectedID","drawField","getEventCameras","selected","drawCameraProjection","camRadius","pos","ellipse","fill","drawCamera","useRef","canvasRef","setScale","prevScale","current","getContext","div","isScrollingUp","deltaY","renderCallback","onresize","fieldRemoveIndex","ref","setShader","initializeCallback","BasicShader","viewport","alert","clearColor","activate","createMeshVAO","Uint16Array","TRIANGLES","worldMatrix","viewMatrix","projMatrix","mat4","identity","lookAt","perspective","glMatrix","toRadian","uniformMatrix4fv","clearGL","gridLines","createGridMesh","renderMesh","CanvasController","init","envChangeCallback","rmIndexField","rmIndexRender","Shader","range","subspacing","colorArray","Array","setField","getEventField","setCameras","EnvironmentListing","identifiable","materialIcon","elevation","verticalAlign","paddingLeft","isIdentifiableSelected","className","marginLeft"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n","module.exports = React;","import { createContext, useContext } from \"react\";\r\nimport { EventEnvironment } from \"../model/WrappedEventModel\";\r\n\r\nexport const EnviromentProvider = createContext<EventEnvironment>({} as EventEnvironment)\r\nexport const useEnvironment = () => {\r\n    return useContext(EnviromentProvider)\r\n}","import React, { createContext, useContext, useState } from \"react\"\r\nimport { Identifiable } from \"../../model/WrappedEventModel\"\r\nimport { RenderMode } from \"../renderer/EnvironmentRenderer\"\r\n\r\n\r\nexport interface EditorState {\r\n    currentSelectedObject: Identifiable,\r\n    setCurrentSelectedObject: React.Dispatch<React.SetStateAction<Identifiable>>,\r\n    currentRenderMode: RenderMode,\r\n    setRenderMode: React.Dispatch<React.SetStateAction<RenderMode>>\r\n}\r\n\r\nexport const EditorContext = createContext<EditorState>({} as EditorState)\r\nexport const useEditorState = () => {\r\n    return useContext(EditorContext)\r\n}\r\n\r\nexport function isIdentifiableSelected(i: Identifiable): boolean {\r\n    const editor = useEditorState()\r\n    if (editor.currentSelectedObject == null) {\r\n        return false\r\n    }\r\n    return editor.currentSelectedObject.id === i.id\r\n}\r\n\r\ninterface EditorStateProviderProps {\r\n\r\n}\r\n\r\nexport const EditorStateProvider: React.FC<React.PropsWithChildren<EditorStateProviderProps>> = (props) => {\r\n        const [ currentSelectedObject, setCurrentSelectedObject ] = useState<Identifiable>(null)\r\n        const [ currentRenderMode, setRenderMode ] = useState<RenderMode>(\"2D\")\r\n\r\n        const editorState: EditorState = {\r\n            currentSelectedObject: currentSelectedObject,\r\n            setCurrentSelectedObject: setCurrentSelectedObject,\r\n            currentRenderMode: currentRenderMode, \r\n            setRenderMode: setRenderMode\r\n        }\r\n\r\n\r\n        return (\r\n            <EditorContext.Provider value={editorState}>\r\n                {props.children}\r\n            </EditorContext.Provider>\r\n        );\r\n}","module.exports = MaterialUI;","export default class Coordinate {\r\n    \r\n    public x: number\r\n    public y: number\r\n    public z: number\r\n    public static readonly zero: Coordinate = Coordinate.XYZ(0,0,0)\r\n\r\n    constructor(x: number, y: number, z: number) {\r\n        this.x = x\r\n        this.y = y\r\n        this.z = z\r\n    }\r\n\r\n    static XY(x: number, y: number): Coordinate {\r\n        return new Coordinate(x,y,0)\r\n    }\r\n\r\n    static XYZ(x: number, y: number, z: number): Coordinate {\r\n        return new Coordinate(x,y,z)\r\n    }\r\n\r\n\r\n\r\n    addXY(other: Coordinate): Coordinate {\r\n        return Coordinate.XYZ(this.x + other.x, this.y + other.y, this.z)\r\n    }\r\n\r\n    addXYZ(other: Coordinate): Coordinate {\r\n        return Coordinate.XYZ(this.x + other.x, this.y + other.y, this.z + other.z)\r\n    }\r\n\r\n\r\n\r\n\r\n}","/**\r\n * Creates a WebGL vertex/fragment shader\r\n * \r\n * @see https://www.youtube.com/watch?v=J9NC6Zf2uk4\r\n * @param gl WebGL2 context\r\n * @param src Source code for shader in glsl format\r\n * @param type Specify vertex / fragment shader\r\n */\r\n\r\nimport Coordinate from \"../../../../model/Coordinate\"\r\nimport { ATTR_POSITION_LOC, ATTR_POSITION_NAME, ATTR_COLOR_LOC, ATTR_COLOR_NAME } from \"../GLUtilities\"\r\n\r\nexport function createShader(gl: WebGL2RenderingContext, src: string, type: \"vertex\" | \"fragment\"): WebGLShader {\r\n    var shader = gl.createShader(type == \"vertex\" ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER)\r\n    gl.shaderSource(shader, src)\r\n    gl.compileShader(shader)\r\n\r\n    // Checks if shaders failed to compile\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n        console.error(\"Shader of type \" + type + \" failed to compile: \" + gl.getShaderInfoLog(shader))\r\n        gl.deleteShader(shader)\r\n        return null\r\n    }\r\n\r\n    return shader\r\n}\r\n\r\n/**\r\n * Create a WebGL program\r\n * \r\n * @see https://www.youtube.com/watch?v=J9NC6Zf2uk4\r\n * @param gl WebGl2 context\r\n * @param vertexShader A vertex shader\r\n * @param fragmentShader A fragment shader\r\n * @param validate Whether to validate the program for aditional debugging. Is expensive, so should only be used during development.\r\n */\r\n\r\nexport function createProgram(gl: WebGL2RenderingContext, vertexShader: WebGLShader, fragmentShader: WebGLShader, validate: boolean): WebGLProgram {\r\n    var program = gl.createProgram()\r\n\r\n    // Attach shaders\r\n    gl.attachShader(program, vertexShader)\r\n    gl.attachShader(program, fragmentShader)\r\n\r\n    gl.bindAttribLocation(program, ATTR_POSITION_LOC, ATTR_POSITION_NAME)\r\n    gl.bindAttribLocation(program, ATTR_COLOR_LOC, ATTR_COLOR_NAME)\r\n\r\n    gl.linkProgram(program)\r\n\r\n    // Check if successful\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n        console.error(\"Error creating GL program: \" + gl.getProgramInfoLog(program))\r\n        gl.deleteProgram(program)\r\n        return null\r\n    }\r\n\r\n    // Validate for additional debugging\r\n    if (validate) {\r\n        gl.validateProgram(program)\r\n        if (!gl.getProgramParameter(program, gl.VALIDATE_STATUS)) {\r\n            console.error(\"Error validating GL program:\", gl.getProgramInfoLog(program))\r\n            gl.deleteProgram(program)\r\n            return null\r\n        }\r\n    }\r\n\r\n    // Delete shaders as program has been created\r\n    gl.detachShader(program, vertexShader)\r\n    gl.detachShader(program, fragmentShader)\r\n    gl.deleteShader(vertexShader)\r\n    gl.deleteShader(fragmentShader)\r\n    \r\n    return program\r\n}\r\n\r\nexport function createArrayBufferWithVerticies(gl: WebGL2RenderingContext, verticies: Float32Array, isStatic?: boolean): WebGLBuffer {\r\n    var buffer = gl.createBuffer()\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\r\n    gl.bufferData(\r\n        gl.ARRAY_BUFFER,\r\n        verticies,\r\n        (isStatic ?? \"true\") ? gl.STATIC_DRAW : gl.DYNAMIC_DRAW,\r\n    )\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, null)\r\n    return buffer\r\n}\r\n\r\nexport function createArrayBufferWithCoordinates(gl: WebGL2RenderingContext, coordinates: Coordinate[], isStatic?: boolean): WebGLBuffer {\r\n    return createArrayBufferWithVerticies(gl, coordinateToFloat32Array(coordinates), isStatic)\r\n}\r\n\r\nexport function coordinateToFloat32Array(coordinates: Coordinate[]): Float32Array {\r\n    var array:number[] = []\r\n    coordinates.forEach(coord => { \r\n        array.push(coord.x)\r\n        array.push(coord.y)\r\n        array.push(coord.z)\r\n    })\r\n    let fArray = new Float32Array(array)\r\n    return fArray\r\n}\r\n\r\nexport interface MeshVAO {\r\n    drawMode: number\r\n    vertexArray?: WebGLVertexArrayObject,\r\n    vertexCount?: number,\r\n    vertexComponentLength?: number, \r\n    vertexBuffer?: WebGLBuffer,\r\n    uvBuffer?: WebGLBuffer,\r\n    indexBuffer?: WebGLBuffer,\r\n    indexCount?: number,\r\n    colorBuffer?: WebGLBuffer\r\n}\r\n\r\n/**\r\n * Create mesh vertex object. By default, it will connect the points via lines. \r\n * @param gl WebGL2 Context\r\n * @param indexArray Index array, specify how you want the points to be connected\r\n * @param vertArray \r\n * @param vertColorArray \r\n */\r\n\r\nexport function createMeshVAO(gl: WebGL2RenderingContext, indexArray: Uint16Array, vertArray: Float32Array, vertColorArray?: Float32Array): MeshVAO {\r\n    const vertexArray = gl.createVertexArray()\r\n    var mesh: MeshVAO = {\r\n        vertexArray: vertexArray,\r\n        drawMode: gl.LINES,\r\n    }\r\n    gl.bindVertexArray(vertexArray)\r\n\r\n    if (vertArray !== null) {\r\n        var vertexBuffer = gl.createBuffer()\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\r\n        gl.bufferData(gl.ARRAY_BUFFER, vertArray, gl.STATIC_DRAW)\r\n        gl.enableVertexAttribArray(ATTR_POSITION_LOC)\r\n        gl.vertexAttribPointer(ATTR_POSITION_LOC, 3, gl.FLOAT, false, 0, 0)\r\n        mesh.vertexCount = vertArray.length / 3\r\n        mesh.vertexComponentLength = 3\r\n        mesh.vertexBuffer = vertexBuffer\r\n    }\r\n\r\n    if (vertColorArray != null && vertColorArray !== undefined) {\r\n        var colorBuffer = gl.createBuffer()\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer)\r\n        gl.bufferData(gl.ARRAY_BUFFER, vertColorArray, gl.STATIC_DRAW)\r\n        gl.enableVertexAttribArray(ATTR_COLOR_LOC)\r\n        gl.vertexAttribPointer(ATTR_COLOR_LOC, 3, gl.FLOAT, false, 3*Float32Array.BYTES_PER_ELEMENT, 0)\r\n        mesh.colorBuffer = colorBuffer\r\n    }\r\n\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, null)\r\n    \r\n    if (indexArray != null) {\r\n        var indexBuffer = gl.createBuffer()\r\n        mesh.indexBuffer = indexBuffer\r\n        mesh.indexCount = indexArray.length\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer)\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indexArray, gl.STATIC_DRAW)\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null)\r\n\r\n    }\r\n\r\n    gl.bindVertexArray(null)\r\n\r\n    return mesh\r\n}\r\n\r\nexport class Shader {\r\n    \r\n    gl: WebGL2RenderingContext\r\n    program: WebGLProgram\r\n    \r\n    constructor(gl: WebGL2RenderingContext, vertSrc: string, fragSrc: string, validate?: boolean) {\r\n        this.gl = gl\r\n\r\n        var vertexShader = createShader(gl, vertSrc, \"vertex\")\r\n        var fragmentShader = createShader(gl, fragSrc, \"fragment\")\r\n        this.program = createProgram(gl, vertexShader, fragmentShader, validate ?? false)\r\n    \r\n        if (this.program != null) {\r\n            // no compile issues\r\n            this.gl.useProgram(this.program)\r\n        }\r\n    }\r\n\r\n    activate() {\r\n        this.gl.useProgram(this.program)\r\n    }\r\n\r\n    deactivate() {\r\n        this.gl.useProgram(null)\r\n    }\r\n\r\n    dispose() {\r\n        if (this.gl.getParameter(this.gl.CURRENT_PROGRAM) === this.program) {\r\n            this.deactivate()\r\n        }\r\n        this.gl.deleteProgram(this.program)\r\n    }\r\n\r\n    renderMesh(mesh: MeshVAO) {\r\n        this.gl.bindVertexArray(mesh.vertexArray)\r\n        if (mesh.indexBuffer != null) {\r\n            this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, mesh.indexBuffer)\r\n            this.gl.drawElements(mesh.drawMode, mesh.indexCount, this.gl.UNSIGNED_SHORT, 0)\r\n            this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null)\r\n        } else {\r\n            this.gl.drawArrays(mesh.drawMode, 0, mesh.vertexCount)\r\n        }\r\n        \r\n        this.gl.bindVertexArray(null)\r\n    }\r\n\r\n\r\n}","import Environment, { EnvironmentSetup } from \"./Environment\";\r\nimport Camera, { CameraProperties } from \"./Camera\";\r\nimport Coordinate from \"./Coordinate\";\r\nimport Field from \"./Field\";\r\n\r\nexport interface Identifiable {\r\n    readonly id: string,\r\n    name?: string,\r\n}\r\n\r\nfunction generateId(): string {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n      });\r\n}\r\n\r\nexport class EventEnvironment extends Environment implements Identifiable {\r\n    \r\n    // Events\r\n    public cameraNonRenderPropsModified: ((camera: Camera) => void)[] = []\r\n    public cameraRenderPropsModified: ((camera: Camera) => void)[] = []\r\n    public fieldDimensionsModified: ((dimensions: Coordinate[], field?: Field) => void)[] = []\r\n\r\n    readonly id: string = generateId()\r\n\r\n    constructor(setup: EnvironmentSetup) {\r\n        super(setup)\r\n        this.registerFieldEvents(this.field as EventField)\r\n        setup.cameras.forEach((cam) => {\r\n            this.reigsterCameraEvents(cam)\r\n        })\r\n\r\n\r\n    }\r\n\r\n    getEventField(): EventField {\r\n        return this.field as EventField\r\n    }\r\n\r\n    getEventCameras(): EventCamera[] {\r\n        const ecams = this.cameras.map((cam) => {\r\n            if (cam instanceof EventCamera) {\r\n                return cam as EventCamera\r\n            }\r\n        })\r\n        return ecams\r\n    }\r\n\r\n    addCamera(camera: Camera) {\r\n        super.addCamera(camera)\r\n        this.cameraRenderPropsModified.forEach(func => func(camera))\r\n        this.cameraNonRenderPropsModified.forEach(func => func(camera))\r\n        this.reigsterCameraEvents(camera)\r\n    }\r\n\r\n    removeCamera(camera: EventCamera) {\r\n        let removeIndex = this.cameras.findIndex(cam => (cam as EventCamera).id === camera.id)\r\n        this.cameras.splice(removeIndex, 1)\r\n        this.cameraRenderPropsModified.forEach(func => func(camera))\r\n        this.cameraNonRenderPropsModified.forEach(func => func(camera))\r\n    }\r\n\r\n    private reigsterCameraEvents(camera: Camera) {\r\n        if (camera instanceof EventCamera) {\r\n            let ecam = camera as EventCamera\r\n            ecam.cameraPropsChanged.push(() => {\r\n                // When the camera's properties are changed, fire a function\r\n                // that lets all environment listeners know that the properties\r\n                // have been updated. Note that these properties won't affect\r\n                // any calculations or rendering, i.e. the camera's name\r\n                this.cameraNonRenderPropsModified.forEach(func => func(ecam))\r\n            })\r\n            ecam.cameraRenderPropsChanged.push(() => {\r\n                // When this camera's render properties are changed, fire a function\r\n                // that lets all environment listeners know that the render propeprties\r\n                // have been updated. \r\n                this.cameraRenderPropsModified.forEach(func => func(ecam))\r\n            })\r\n        }\r\n    }\r\n\r\n    private registerFieldEvents(field: Field) {\r\n        if (field instanceof EventField) {\r\n            let eField = field as EventField\r\n            eField.fieldDimensionsChanged.push((coords, newField) => {\r\n                // When the field dimensions are changed, fire a function\r\n                // that lets all environment listeners know that the dimensions\r\n                // have been updated. \r\n                this.fieldDimensionsModified.forEach(func => func(coords, newField))\r\n            })\r\n        }\r\n    }\r\n\r\n    loadFromJSON(json: string) {\r\n        const jsonObject = JSON.parse(json)\r\n        this.cameras = []\r\n        this.field = new EventField(\r\n            Coordinate.XYZ(jsonObject.field.c1.x, jsonObject.field.c1.y, jsonObject.field.c1.z),\r\n            Coordinate.XYZ(jsonObject.field.c2.x, jsonObject.field.c2.y, jsonObject.field.c2.z)\r\n        )\r\n        this.registerFieldEvents(this.field)\r\n\r\n        this.fieldDimensionsModified.forEach(func => func(this.field.getBoundPoints(), this.field))\r\n        \r\n        let jsonCameras = jsonObject.cameras as any[]\r\n        jsonCameras.forEach(camera => {\r\n            let name = camera.name as string | undefined\r\n            let jProps = camera.props as any\r\n            let camProps: CameraProperties = {\r\n                sensorHeight: jProps.sensorHeight as number,\r\n                sensorWidth: jProps.sensorWidth as number,\r\n                sensorXResolution: jProps.sensorXResolution as number,\r\n                sensorYResolution: jProps.sensorYResolution as number,\r\n                focalDistance: jProps.focalDistance as number,\r\n                pitch: jProps.pitch as number,\r\n                yaw: jProps.yaw as number,\r\n                position: Coordinate.XYZ(jProps.position.x as number, jProps.position.y as number, jProps.position.z as number)\r\n            }\r\n            let eCam = new EventCamera(camProps)\r\n            eCam.name = name\r\n            this.addCamera(eCam)\r\n        })\r\n    }\r\n\r\n    getJSONString(): string {\r\n        const fieldBoundPoints = this.field.getBoundPoints()\r\n        var jsonObject = {\r\n            field: {\r\n                c1: fieldBoundPoints[0],\r\n                c2: fieldBoundPoints[1]\r\n            },\r\n\r\n            cameras: this.cameras.map((cam) => {\r\n                let cameraName = (cam as EventCamera).name\r\n                return {name: cameraName ?? undefined, props: cam.getCameraProperties()}\r\n            })\r\n        }\r\n\r\n        return JSON.stringify(jsonObject)\r\n    }\r\n\r\n\r\n}\r\n\r\nexport class EventCamera extends Camera implements Identifiable {\r\n    public cameraPropsChanged: ((camera: Camera) => void)[] = []\r\n    public cameraRenderPropsChanged: ((props: CameraProperties, camera?: Camera) => void)[] = []\r\n    public readonly id = generateId()\r\n    public name?: string\r\n\r\n    constructor(properties: CameraProperties) {\r\n        super(properties)\r\n    }\r\n\r\n    setName(newName: string) {\r\n        this.name = newName\r\n        if (this.cameraPropsChanged != undefined) {\r\n            this.cameraPropsChanged.forEach(func => func(this))\r\n        }\r\n    }\r\n\r\n    setCameraProperties(properties: CameraProperties): CameraProperties {\r\n        const props = super.setCameraProperties(properties)\r\n        if (this.cameraRenderPropsChanged != undefined) {\r\n            this.cameraRenderPropsChanged.forEach(func => func(props, this))\r\n        }\r\n        return props\r\n    }\r\n\r\n}\r\n\r\nexport class EventField extends Field implements Identifiable {\r\n    readonly id: string = generateId()\r\n\r\n    constructor(c1: Coordinate, c2: Coordinate) {\r\n        super(c1, c2)\r\n    }\r\n\r\n    public fieldDimensionsChanged: ((newDimensions: Coordinate[], field?: EventField) => void)[] = []\r\n\r\n    setPoints(c1: Coordinate, c2: Coordinate) {\r\n        super.setPoints(c1, c2)\r\n        if (this.fieldDimensionsChanged != undefined) {\r\n            this.fieldDimensionsChanged.forEach(func => func(this.getPoints(), this))\r\n        }\r\n    }\r\n\r\n}","// Auto-generated by gltots.py\r\nexport type VertexShaderAttributes = \"a_position\" | \"a_color\"\r\nexport type VertexShaderVaryings = \"fColor\"\r\nexport type VertexShaderUniforms = \"worldMatrix\" | \"viewMatrix\" | \"projMatrix\"\r\nexport default class VertexShader {\r\nstatic getAttributeLocation(gl: WebGL2RenderingContext, program: WebGLProgram, item: VertexShaderAttributes): number { return gl.getAttribLocation(program, item) }\r\nstatic getUniformLocation(gl: WebGL2RenderingContext, program: WebGLProgram, item: VertexShaderUniforms): WebGLUniformLocation { return gl.getUniformLocation(program, item) }\r\nstatic src = \"# version 300 es\\n\\nin vec3 a_position;\\nin vec3 a_color;\\n\\nuniform mat4 worldMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat4 projMatrix;\\n\\nout vec4 fColor;\\n\\nvoid main(void) {\\n    fColor = vec4(a_color, 1.0);\\n    gl_Position = projMatrix * viewMatrix * worldMatrix * vec4(a_position, 1.0);\\n}\"\r\n}\r\n","import Coordinate from \"./Coordinate\";\r\n\r\n/**\r\n * A camera class. Represents a pin-hole camera with properties such as sensor size and focal distance.\r\n * Capable of projecting its view as coordinates.\r\n */\r\nexport default class Camera {\r\n\r\n    private _properties: CameraProperties\r\n    private _computedPropreties: ComputedCameraProperties\r\n\r\n    constructor(properties: CameraProperties) {\r\n        this.setCameraProperties(properties)\r\n    }\r\n\r\n    getCameraProperties() {\r\n        return this._properties\r\n    }\r\n\r\n    setCameraProperties(properties: CameraProperties): CameraProperties {\r\n        const old = this._properties\r\n        this._properties = properties\r\n        this.calculateFOV()\r\n        return this._properties\r\n    }\r\n\r\n    calculateFOV() {\r\n        const horizontalFOV = this.calculateFOVAngle(this._properties.sensorWidth)\r\n        const verticalFOV = this.calculateFOVAngle(this._properties.sensorHeight)\r\n        this._computedPropreties = {horizontalFOV: horizontalFOV, verticalFOV: verticalFOV}\r\n    }\r\n\r\n    /**\r\n     * Calculates the either the horizontal or vertical field of view angle of the camera\r\n     * @param length Either the width/height of the sensor in mm\r\n     */\r\n    calculateFOVAngle(length: number): number {\r\n        return Math.atan((length)/(2*this._properties.focalDistance));\r\n    }\r\n\r\n    /**\r\n     * Project a camera's field of view. Result is a trapezoid, and coordinates are in meters.\r\n     * @returns Coordinates of the camera's projection\r\n     */\r\n\r\n    project(): Coordinate[] {\r\n        // The camera's projection is a trapezoid. The follwing functions calculate the side lengths\r\n        const distance1 = this._properties.position.z * Math.tan(this._properties.pitch - this._computedPropreties.verticalFOV)\r\n        const distance2 = this._properties.position.z * Math.tan(this._properties.pitch + this._computedPropreties.verticalFOV)\r\n        const distance3 = (this._properties.position.z * Math.tan(this._computedPropreties.horizontalFOV)) / (Math.cos(this._properties.pitch - this._computedPropreties.verticalFOV))\r\n        const distance4 = (this._properties.position.z * Math.tan(this._computedPropreties.horizontalFOV)) / (Math.cos(this._properties.pitch + this._computedPropreties.verticalFOV))\r\n\r\n        let rotate = (coordinate: Coordinate): Coordinate => {\r\n            let rotatedX = coordinate.x * Math.cos(this._properties.yaw) - coordinate.y * Math.sin(this._properties.yaw)\r\n            let rotatedY = coordinate.y * Math.cos(this._properties.yaw) + coordinate.x * Math.sin(this._properties.yaw)\r\n            return Coordinate.XY(rotatedX, rotatedY)\r\n        }\r\n        \r\n        const c3 = rotate(Coordinate.XY(distance3, distance1)).addXY(this._properties.position)\r\n        const c4 = rotate(Coordinate.XY(-distance3, distance1)).addXY(this._properties.position)\r\n        const c2 = rotate(Coordinate.XY(distance4, distance2)).addXY(this._properties.position)\r\n        const c1 = rotate(Coordinate.XY(-distance4, distance2)).addXY(this._properties.position)\r\n\r\n        return [c1,c2,c3,c4]\r\n    }\r\n\r\n    /**\r\n     * Average Ground Sampling Distance for X\r\n     * Format: m/px\r\n     */\r\n    getAverageGroundSamplingDistanceX(): number {\r\n        const distance4 = (this._properties.position.z * Math.tan(this._computedPropreties.horizontalFOV)) / (Math.cos(this._properties.pitch + this._computedPropreties.verticalFOV))\r\n        return (2*distance4)/(this._properties.sensorXResolution)\r\n    }\r\n    \r\n    /**\r\n     * Average Ground Sampling Distance for Y\r\n     * Format: m/px\r\n     */\r\n    getAverageGroundSamplingDistanceY(): number {\r\n        const distance1 = this._properties.position.z * Math.tan(this._properties.pitch - this._computedPropreties.verticalFOV)\r\n        const distance2 = this._properties.position.z * Math.tan(this._properties.pitch + this._computedPropreties.verticalFOV)\r\n        return (Math.abs(distance1) + Math.abs(distance2))/(this._properties.sensorYResolution)\r\n    }\r\n\r\n}\r\n\r\nexport interface CameraProperties {\r\n    // Physical dimensions of the camera's sensor in mm\r\n    sensorWidth: number,\r\n    sensorHeight: number,\r\n\r\n    // Pixel resolution of the camera's sensor\r\n    sensorXResolution: number,\r\n    sensorYResolution: number,\r\n\r\n    // The camera's focal distance, which is the distance of\r\n    // the image plane from the apeture / focal point, in mm\r\n    focalDistance: number,\r\n\r\n    // Camera's transform\r\n    // pitch: Rotates the camera up and down\r\n    // yaw: Rotates the camera left and right around its pole\r\n    yaw: number,\r\n    pitch: number,\r\n    position: Coordinate\r\n}\r\n\r\nexport const DefaultCameraProperties:CameraProperties  = {\r\n    sensorWidth: 2,\r\n    sensorHeight: 1,\r\n    sensorXResolution: 2000,\r\n    sensorYResolution: 1000,\r\n    focalDistance: 1,\r\n    yaw: 0,\r\n    pitch: 0,\r\n    position: Coordinate.XYZ(0,0,5)\r\n}\r\n\r\nexport interface ComputedCameraProperties {\r\n    // Camera's FOV angles, these are computed by the Camera's constructor\r\n    // so they are initially left undefined\r\n    horizontalFOV?: number,\r\n    verticalFOV?: number,\r\n\r\n}","import React from 'react'\r\nimport { TextField, InputAdornment } from '@material-ui/core';\r\n\r\ninterface NumericControlProps {\r\n    value: number,\r\n    name: string, \r\n    unit: string,\r\n    onChange: (val: number) => void,\r\n    color?: string,\r\n    min?: number,\r\n    max?: number,\r\n    style?: React.CSSProperties\r\n\r\n}\r\n\r\nexport const NumericControl: React.FC<NumericControlProps> = ({value, name, unit, onChange, color, min, max, style}) => {\r\n        return (\r\n            <TextField \r\n                style={{...style, color: color}}\r\n                value={value}\r\n                type=\"number\"\r\n                label={name}\r\n                \r\n                onChange={(event) => {\r\n                    const number = parseInt(event.currentTarget.value)\r\n                    if (number != NaN) {\r\n                        onChange(number)\r\n                    }\r\n                }}\r\n                inputProps={{min:min, max: max}}\r\n                InputProps={{\r\n                    endAdornment: <InputAdornment position=\"end\">{unit}</InputAdornment>\r\n                }}\r\n            />\r\n        );\r\n}","import { createShader, createProgram } from \"./shaders/ShaderUtility\"\r\nimport VertexShader from \"./shaders/ts/VertexShader\"\r\nimport FragmentShader from \"./shaders/ts/FragmentShader\"\r\nexport const ATTR_POSITION_LOC = 0\r\nexport const ATTR_POSITION_NAME = \"a_position\"\r\nexport const ATTR_COLOR_LOC = 1\r\nexport const ATTR_COLOR_NAME = \"a_color\"\r\n\r\n /**\r\n * Creates a GL program. This is expensive and only needs to be called once rather than every render or every time the window is resized.\r\n * @param gl WebGL2 Context\r\n * @returns The WebGL program\r\n */\r\n\r\nexport function createGLProgram(gl: WebGL2RenderingContext): WebGLProgram {\r\n    console.log(\"Creating GL program...\")\r\n    let vShader = createShader(gl, VertexShader.src, \"vertex\")\r\n    let fShader = createShader(gl, FragmentShader.src, \"fragment\")\r\n    let program = createProgram(gl, vShader, fShader, true)\r\n    return program\r\n}\r\n\r\n/**\r\n * Completely clear a GL canvas\r\n * @param gl WebGL2 Context\r\n */\r\nexport function clearGL(gl: WebGL2RenderingContext) {\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\r\n}\r\n\r\n","// Auto-generated by gltots.py\r\nexport type FragmentShaderAttributes = \"fColor\"\r\nexport type FragmentShaderVaryings = \"finalColor\"\r\nexport default class FragmentShader {\r\nstatic getAttributeLocation(gl: WebGL2RenderingContext, program: WebGLProgram, item: FragmentShaderAttributes): number { return gl.getAttribLocation(program, item) }\r\nstatic src = \"# version 300 es\\n\\nprecision mediump float;\\nin vec4 fColor;\\nout vec4 finalColor;\\n\\nvoid main(void) {\\n    finalColor = fColor;\\n}\"\r\n}\r\n","import * as React from \"react\"\r\nimport * as ReactDOM from \"react-dom\";\r\nimport { App } from \"./components/App\";\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"react-div\"))","module.exports = ReactDOM;","import React, { useEffect } from 'react';\r\nimport Coordinate from '../model/Coordinate';\r\nimport { EventEnvironment, EventField } from '../model/WrappedEventModel';\r\nimport { CamProjToolBar } from './CamProjToolBar';\r\nimport { InspectorPanel } from './inspector/InspectorPanel';\r\nimport { EnviromentProvider } from './Providers';\r\nimport { EnvironmentRenderer } from './renderer/EnvironmentRenderer';\r\nimport { EnvironmentView } from './scene/EnvironmentView';\r\nimport { EditorStateProvider } from './providers/Editor';\r\n\r\ninterface AppProps {\r\n\r\n}\r\n\r\nconst environment = new EventEnvironment({\r\n    cameras: [],\r\n    field: new EventField(Coordinate.XY(-1,-1), Coordinate.XY(1,1))\r\n})\r\n\r\nexport const App: React.FC<AppProps> = ({}) => {\r\n        useEffect(() => {\r\n            // Add a dialog that warns the user of unsaved progress being lost\r\n            // when the page is about to close\r\n\r\n            window.addEventListener(\"beforeunload\", (e: BeforeUnloadEvent) => {\r\n                e.preventDefault()\r\n                return \"Warning: Unsaved progress will be lost!\"\r\n            })\r\n        }, [])\r\n\r\n        return (\r\n            <EnviromentProvider.Provider value={environment}>\r\n                <EditorStateProvider>\r\n                    <div style={{display: \"flex\", flexDirection: \"column\", width:\"100%\", height:\"100vh\", minHeight:\"100vh\", overflow:\"hidden\"}}>\r\n                        <CamProjToolBar />\r\n                        <div style={{display: \"flex\", flexDirection: \"row\", flex:1}}>\r\n                                <EnvironmentView style={{flex:1}} />\r\n                                <EnvironmentRenderer style={{flex:3}} />\r\n                                <InspectorPanel style={{flex:1}}/>\r\n                        </div>\r\n                    </div>\r\n                </EditorStateProvider>\r\n            </EnviromentProvider.Provider>\r\n        );\r\n}","import Camera, { CameraProperties } from \"./Camera\";\r\nimport Field from \"./Field\";\r\nimport Coordinate from \"./Coordinate\";\r\n\r\nexport default class Environment {\r\n    \r\n    cameras: Camera[]\r\n    field: Field\r\n\r\n    constructor(setup: EnvironmentSetup) {\r\n        this.cameras = setup.cameras\r\n        this.field = setup.field\r\n    }\r\n\r\n    addCamera(camera: Camera) {\r\n        this.cameras.push(camera)\r\n    }\r\n\r\n}\r\n\r\nexport interface EnvironmentSetup {\r\n    cameras: Camera[],\r\n    field?: Field\r\n}","import Coordinate from \"./Coordinate\";\r\n\r\nexport default class Field {\r\n    private c1: Coordinate\r\n    private c2: Coordinate\r\n    private c3: Coordinate\r\n    private c4: Coordinate\r\n\r\n    constructor(c1: Coordinate, c2: Coordinate) {\r\n        this.setPoints(c1, c2)\r\n    }\r\n\r\n    public static fromPosition(center: Coordinate, width: number, height: number): Field {\r\n        const c1 = Coordinate.XY(center.x - width/2, center.y - height/2)\r\n        const c2 = Coordinate.XY(center.x + width/2, center.y + height/2)\r\n        return new Field(c1,c2)\r\n\r\n    }\r\n\r\n    getWidth(): number {\r\n        return Math.abs(this.c2.x-this.c1.x)\r\n    }\r\n\r\n    getHeight(): number {\r\n        return Math.abs(this.c2.y-this.c1.y)\r\n    }\r\n\r\n    getCenter(): Coordinate {\r\n        return Coordinate.XY(Math.min(this.c1.x, this.c2.x) + this.getWidth()/2,\r\n        Math.min(this.c1.y,this.c2.y) + this.getHeight()/2)\r\n    }\r\n\r\n    /**\r\n     * Find other two points of rectangle given the first two\r\n     * @param c1 First point\r\n     * @param c2 Second point\r\n     */\r\n    calcAndSetRemainingPoints(c1: Coordinate, c2: Coordinate) {\r\n        this.c3 = Coordinate.XY(c1.x, c2.y)\r\n        this.c4 = Coordinate.XY(c2.x, c1.y)\r\n    }\r\n\r\n    setPoints(c1: Coordinate, c2: Coordinate) {\r\n        this.c1 = c1\r\n        this.c2 = c2\r\n        this.calcAndSetRemainingPoints(c1, c2)\r\n    }\r\n\r\n    setFromPosition(center: Coordinate, width: number, height: number) {\r\n        const c1 = Coordinate.XY(center.x - width/2, center.y - height/2)\r\n        const c2 = Coordinate.XY(center.x + width/2, center.y + height/2)\r\n        this.setPoints(c1, c2)\r\n    }\r\n\r\n    getBoundPoints(): Coordinate[] {\r\n        return [this.c1, this.c2]\r\n    }\r\n\r\n    getPoints(): Coordinate[] {\r\n        return [this.c1,this.c4,this.c2,this.c3]\r\n    }\r\n\r\n    /**\r\n     * Determine if point inside field using a more accurate method\r\n     * @see https://www.geeksforgeeks.org/how-to-check-if-a-given-point-lies-inside-a-polygon/\r\n     */\r\n    in(projection: Coordinate[]): boolean {\r\n        const EXTREME_DISTANCE = 1000000\r\n        const orientate = (c1: Coordinate, c2: Coordinate, c3: Coordinate) => {\r\n            const val = (c2.y - c1.y) * (c3.x - c2.x) - (c2.x - c1.x) * (c3.y - c2.y)\r\n            if (val == 0) {\r\n                return \"COLINEAR\" // Points are colinear\r\n            } else if (val > 0) {\r\n                return \"CLOCKWISE\" // Points are clockwise\r\n            } else {\r\n                return \"COUNTERCLOCKWISE\" // Points are counterclockwise\r\n            }\r\n\r\n        }\r\n\r\n        // Determines if \"check\" within the segment c1c2\r\n        const onSegment = (c1: Coordinate, check: Coordinate, c2: Coordinate) => {\r\n            return check.x <= Math.max(c1.x, c2.x) &&\r\n                check.x >= Math.min(c1.x, c2.x) &&\r\n                check.y <= Math.max(c1.y, c2.y) &&\r\n                check.y >= Math.min(c1.y, c2.y)\r\n        }\r\n\r\n        const linesIntersect = (a1: Coordinate, a2: Coordinate, b1: Coordinate, b2: Coordinate) => {\r\n            const orientation1 = orientate(a1, a2, b1)\r\n            const orientation2 = orientate(a1, a2, b2)\r\n            const orientation3 = orientate(b1, b2, a1)\r\n            const orientation4 = orientate(b1, b2, a2)\r\n\r\n            // General Case\r\n            if (orientation1 != orientation2 && orientation3 != orientation4) {\r\n                return true\r\n            }\r\n\r\n            // Special Cases for when a point is colinear with a segment and lies on it\r\n            const specialCase1 = orientation1 == \"COLINEAR\" && onSegment(a1, b1, a2)\r\n            const specialCase2 = orientation2 == \"COLINEAR\" && onSegment(a1, b2, a2)\r\n            const specialCase3 = orientation3 == \"COLINEAR\" && onSegment(b1, a1, b2)\r\n            const specialCase4 = orientation4 == \"COLINEAR\" && onSegment(b1, a2, b2)\r\n\r\n            return specialCase1 || specialCase2 || specialCase3 || specialCase4\r\n        }\r\n\r\n        const points = this.getPoints()\r\n        var withinField = true\r\n        for (var pointIndex = 0; pointIndex < points.length; pointIndex++) {\r\n            // Get next coordinate and its extreme test coordinate\r\n            const fieldPoint = points[pointIndex]\r\n            const extremePoint = Coordinate.XY(EXTREME_DISTANCE, fieldPoint.y)\r\n\r\n            // Count intersections of the projection polygon between the coordinate and the extreme point\r\n            var intersections = 0\r\n            for (var index = 0; index < projection.length; index ++) {\r\n                const currentPoint = projection[index]\r\n                const nextPoint = projection[(index+1) % points.length]\r\n                if (linesIntersect(currentPoint, nextPoint, fieldPoint, extremePoint)) {\r\n                    // Check if coord is colinear with currentPoint and nextPoint, because\r\n                    // if it is, then it is within the field if it also lies on the line segment\r\n                    // between currentPoint and nextPoint\r\n\r\n                    if (orientate(currentPoint, fieldPoint, nextPoint) == \"COLINEAR\" && onSegment(currentPoint, fieldPoint, nextPoint)) {\r\n                        break\r\n                    }\r\n\r\n                    intersections++\r\n                }\r\n            }\r\n\r\n            withinField = intersections % 2 == 1\r\n            if (!withinField) {\r\n                break\r\n            }\r\n        }\r\n\r\n        return withinField\r\n    }\r\n    \r\n}","import React, { ChangeEvent } from 'react'\r\nimport { AppBar, Typography, Toolbar, Button } from '@material-ui/core';\r\nimport { useEnvironment } from './Providers';\r\nimport { useEditorState } from './providers/Editor';\r\n\r\ninterface CamProjToolBarProps {\r\n\r\n}\r\n\r\nexport const CamProjToolBar: React.FC<CamProjToolBarProps> = ({}) => {\r\n        const environment = useEnvironment()\r\n        const editor = useEditorState()\r\n\r\n        return (\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" style={{flex: 1}}>Camera Project</Typography>\r\n                    <Button color=\"inherit\" onClick={() => {\r\n                        editor.setRenderMode(prevMode => prevMode == \"2D\" ? \"3D\" : \"2D\")\r\n                    }}>Switch 2D / 3D</Button>\r\n                    <Button color=\"inherit\" onClick={() => {\r\n                        var input = document.createElement(\"input\")\r\n                        input.type = \"file\"\r\n                        input.hidden = true\r\n                        document.body.appendChild(input)\r\n                        input.click()\r\n                        input.onchange = (ev) => {\r\n                            let inputTarget = ev.target as HTMLInputElement\r\n                            var envFile = inputTarget.files[0]\r\n                            var reader = new FileReader()\r\n                            reader.readAsText(envFile, 'UTF-8')\r\n                            console.log(\"onchange\")\r\n                            reader.onload = (readerEvent) => {\r\n                                environment.loadFromJSON(readerEvent.target.result as string)\r\n                                console.log(\"read\")\r\n                                document.body.removeChild(input)\r\n                            }\r\n                        }\r\n                    }}>Load</Button>\r\n                    <Button color=\"inherit\" onClick={() => {\r\n                        const environmentJSON = environment.getJSONString()\r\n                        var blob = new Blob([environmentJSON], {type:\"text\"})\r\n                        var a = document.createElement(\"a\")\r\n                        document.body.appendChild(a)\r\n                        const fileURL = window.URL.createObjectURL(blob)\r\n                        a.style.setProperty(\"display\", \"none\")\r\n                        a.href = fileURL\r\n                        a.download = \"environment.json\"\r\n                        a.click()\r\n                        window.URL.revokeObjectURL(fileURL)\r\n                        document.body.removeChild(a)\r\n\r\n                    }}>Save</Button> \r\n                </Toolbar>\r\n            </AppBar>\r\n        );\r\n}","import React from 'react';\r\nimport { EventCamera, EventField } from '../../model/WrappedEventModel';\r\nimport { CameraView } from './CameraView';\r\nimport { NoSelectedObject } from './NoSelectedObject';\r\nimport { FieldView } from './FieldView';\r\nimport { useEditorState } from '../providers/Editor';\r\n\r\ninterface PropertyControlProps {\r\n    style?: React.CSSProperties\r\n}\r\n\r\nexport const InspectorPanel: React.FC<PropertyControlProps> = ({style}) => {\r\n        const editor = useEditorState()\r\n\r\n        var inspectElement\r\n        if (editor.currentSelectedObject == null) {\r\n            inspectElement = <NoSelectedObject />\r\n        } else if (editor.currentSelectedObject instanceof EventCamera) {\r\n            inspectElement = <CameraView camera={editor.currentSelectedObject as EventCamera}/>\r\n        } else if (editor.currentSelectedObject instanceof EventField) {\r\n            inspectElement = <FieldView field={editor.currentSelectedObject as EventField} />\r\n        }\r\n        return (<div style={{...style, display:\"flex\"}}>\r\n            {inspectElement}\r\n        </div>);\r\n}","import { Divider, Paper, Typography, TextField, Button } from '@material-ui/core';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport Camera, { CameraProperties } from '../../model/Camera';\r\nimport Coordinate from '../../model/Coordinate';\r\nimport { EventCamera } from '../../model/WrappedEventModel';\r\nimport { NumericControl } from './controls/NumericControl';\r\nimport { useEnvironment } from '../Providers';\r\nimport { useEditorState } from '../providers/Editor';\r\n\r\ninterface CameraViewProps {\r\n    style?: React.CSSProperties\r\n    camera: Camera\r\n}\r\n\r\ninterface CameraPropSettings {\r\n    name: string,\r\n    min: number,\r\n    max: number,\r\n    convertSet?: (val: number) => number\r\n    convertDisplay?: (val: number) => number\r\n}\r\n\r\ntype PropSettings = Record<keyof CameraProperties, CameraPropSettings>\r\nconst CamInputSettings:PropSettings | undefined = {\r\n    position: undefined,\r\n\r\n    sensorWidth: {\r\n        name: \"Sensor Width (mm)\",\r\n        min: 0,\r\n        max: 5\r\n    },\r\n\r\n    sensorHeight: {\r\n        name: \"Sensor Height (mm)\",\r\n        min: 0,\r\n        max: 5 \r\n    },\r\n\r\n    sensorXResolution: {\r\n        name: \"Sensor X Resolution (pixels)\",\r\n        min: 100,\r\n        max: 2000,\r\n    },\r\n\r\n    sensorYResolution: {\r\n        name: \"Sensor Y Resolution (pixels)\",\r\n        min: 100,\r\n        max: 1000\r\n    },\r\n\r\n    focalDistance: {\r\n        name: \"Focal Distance (mm)\",\r\n        min: 1,\r\n        max: 10\r\n    },\r\n    \r\n    pitch: {\r\n        name: \"Pitch\",\r\n        min: 0,\r\n        max: 45,\r\n        convertDisplay: (val) => (180 * val) / Math.PI,\r\n        convertSet: (val) => val * (Math.PI / 180)\r\n    },\r\n\r\n    yaw: {\r\n        name: \"Yaw\",\r\n        min: 0,\r\n        max: 360,\r\n        convertDisplay: (val) => (180 * val) / Math.PI,\r\n        convertSet: (val) => val * (Math.PI / 180)\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const CameraView: React.FC<CameraViewProps> = ({style, camera}) => {\r\n        const [cameraName, setCameraName] = useState((camera as EventCamera).name)\r\n        const [fieldVisible, setFieldVisible] = useState(false)\r\n        const [props, setCamProps] = useState(camera.getCameraProperties())\r\n        const environment = useEnvironment()\r\n        const editor = useEditorState()\r\n\r\n        const setPosition = useCallback((x: number, y: number, z: number) => {\r\n            const newProps = {...props, position: Coordinate.XYZ(x,y,z)}\r\n            setCamProps(newProps)\r\n            camera.setCameraProperties(newProps)\r\n        }, [props, setCamProps])\r\n        \r\n        const setNumericCameraProperty = useCallback((key: keyof CameraProperties, value: number) => {\r\n            if (key == \"position\") {\r\n                // Wrong function to handle position\r\n                return\r\n            }\r\n\r\n            var newProps: CameraProperties = {...props}\r\n            newProps[key] = value as any\r\n            setCamProps(newProps)\r\n            camera.setCameraProperties(newProps)\r\n        }, [props, setCamProps])\r\n\r\n        useEffect(() => {\r\n            let ecam = camera as EventCamera\r\n            let nonRenderPropsCallback = (camera: Camera) => { \r\n                setCameraName((camera as EventCamera).name) \r\n            }\r\n            let renderPropsCallback = (props: CameraProperties, camera: Camera) => { \r\n                setFieldVisible(environment.field!.in(camera.project()))\r\n                setCamProps({...props}) \r\n            }\r\n            ecam.cameraRenderPropsChanged.push(renderPropsCallback)\r\n            ecam.cameraPropsChanged.push(nonRenderPropsCallback)\r\n            nonRenderPropsCallback(camera)\r\n            renderPropsCallback(ecam.getCameraProperties(), camera)\r\n            return () => {\r\n                let letRenderRemoveIndex = ecam.cameraRenderPropsChanged.findIndex(element => element === renderPropsCallback)\r\n                let letNonRenderRemoveIndex = ecam.cameraPropsChanged.findIndex(element => element === nonRenderPropsCallback)\r\n                ecam.cameraRenderPropsChanged.splice(letRenderRemoveIndex, 1)\r\n                ecam.cameraPropsChanged.splice(letNonRenderRemoveIndex, 1)\r\n            }\r\n        }, [camera, environment])\r\n\r\n        return (\r\n            <div \r\n                style={{...style, padding: 8}}\r\n            >\r\n                <TextField\r\n                    style={{\r\n                        width: \"100%\",\r\n                        marginTop: 16,\r\n                        marginBottom: 16\r\n                    }}\r\n                    label=\"Name\"\r\n                    value={cameraName}\r\n                    onChange={(e) => {\r\n                        const eCamera = (camera as EventCamera)\r\n                        eCamera.setName(e.currentTarget.value)\r\n                        setCameraName(e.currentTarget.value)\r\n                    }}\r\n                />\r\n\r\n                {/* Sensor Controls */}\r\n                <Paper\r\n                    style={{\r\n                        padding: 8,\r\n                        marginTop: 8,\r\n                        marginBottom: 8\r\n                    }}\r\n                >\r\n                    <Typography variant=\"h5\">Sensor</Typography>\r\n                    <Typography variant=\"overline\">Sensor Physical Dimensions</Typography>\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                        }}\r\n                    >\r\n                        <NumericControl\r\n                            style={{margin: 4}}\r\n                            name=\"Width\"\r\n                            unit=\"mm\"\r\n                            value={props.sensorWidth}\r\n                            onChange={(val) => {setNumericCameraProperty(\"sensorWidth\", val)}}\r\n                        />\r\n                        <NumericControl\r\n                            style={{margin: 4}}\r\n                            name=\"Height\"\r\n                            unit=\"mm\"\r\n                            value={props.sensorHeight}\r\n                            onChange={(val) => {setNumericCameraProperty(\"sensorHeight\", val)}}\r\n                        />\r\n                    </div>\r\n\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                        }}\r\n                    >\r\n                        <NumericControl\r\n                            style={{margin: 4, width: \"100%\"}}\r\n                            name=\"Focal Distance\"\r\n                            unit=\"mm\"\r\n                            value={props.focalDistance}\r\n                            onChange={(val) => {setNumericCameraProperty(\"focalDistance\", val)}}\r\n                        />\r\n                    </div>\r\n\r\n                    <Typography variant=\"overline\">Camera Resolution</Typography>\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                        }}\r\n                    >\r\n                        <NumericControl\r\n                            style={{margin: 4}}\r\n                            name=\"Width\"\r\n                            unit=\"px\"\r\n                            value={props.sensorXResolution}\r\n                            onChange={(val) => {setNumericCameraProperty(\"sensorXResolution\", val)}}\r\n                        />\r\n                        <NumericControl\r\n                            style={{margin: 4}}\r\n                            name=\"Height\"\r\n                            unit=\"px\"\r\n                            value={props.sensorYResolution}\r\n                            onChange={(val) => {setNumericCameraProperty(\"sensorYResolution\", val)}}\r\n                        />\r\n                    </div>\r\n                    <Divider light style={{marginTop: 8, marginBottom: 8}}/>\r\n                    <Typography variant=\"overline\">Ground Sampling Distance</Typography>\r\n                    <Typography>AVG GSD X: {Math.round(camera.getAverageGroundSamplingDistanceX()*10000)/10000} m/px</Typography>\r\n                    <Typography>AVG GSD Y: {Math.round(camera.getAverageGroundSamplingDistanceY()*10000)/10000} m/px</Typography>\r\n                \r\n                    <Divider light style={{marginTop: 8, marginBottom: 8}}/>\r\n                    <Typography variant=\"overline\">Field Visibility</Typography>\r\n                    <Typography style={{\r\n                        color: fieldVisible ? \"green\" : \"red\"\r\n                    }}>Visible: {fieldVisible ? \"Yes\" : \"No\"}</Typography>\r\n                </Paper>\r\n                \r\n                {/* Transform Controls */}\r\n                <Paper\r\n                    style={{\r\n                        padding: 8,\r\n                        marginTop: 8,\r\n                        marginBottom: 8\r\n                    }}\r\n                >\r\n                    <Typography variant=\"h5\">Transform</Typography>\r\n                    <Typography variant=\"overline\">Position</Typography>\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                        }}\r\n                    >\r\n                        <NumericControl\r\n                            style={{margin: 4}}\r\n                            color=\"red\"\r\n                            name=\"X\"\r\n                            unit=\"m\"\r\n                            value={props.position.x}\r\n                            onChange={(val) => {setPosition(val, props.position.y, props.position.z)}}\r\n                        />\r\n                        <NumericControl\r\n                            style={{margin: 4}}\r\n                            color=\"green\"\r\n                            name=\"Y\"\r\n                            unit=\"m\"\r\n                            value={props.position.y}\r\n                            onChange={(val) => {setPosition(props.position.x, val, props.position.z)}}\r\n                        />\r\n                        <NumericControl\r\n                            color=\"blue\"\r\n                            style={{margin: 4}}\r\n                            name=\"Z\"\r\n                            unit=\"m\"\r\n                            value={props.position.z}\r\n                            onChange={(val) => {setPosition(props.position.x, props.position.y, val)}}\r\n                        />\r\n                    </div>\r\n                    \r\n                    <Divider light style={{marginTop: 8, marginBottom: 8}}/>\r\n\r\n                    <Typography variant=\"overline\">Rotation</Typography>\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                        }}\r\n                    >\r\n                        <NumericControl\r\n                            style={{margin: 4}}\r\n                            name=\"Pitch\"\r\n                            unit=\"deg\"\r\n                            value={props.pitch * (180/Math.PI)}\r\n                            onChange={(val) => {setNumericCameraProperty(\"pitch\", val * (Math.PI/180))}}\r\n                        />\r\n                        <NumericControl\r\n                            style={{margin: 4}}\r\n                            name=\"Yaw\"\r\n                            unit=\"deg\"\r\n                            value={props.yaw * (180/Math.PI)}\r\n                            onChange={(val) => {setNumericCameraProperty(\"yaw\", val * (Math.PI/180))}}\r\n                        />\r\n                    </div>\r\n                </Paper>\r\n\r\n                <Button \r\n                        style={{\r\n                            marginTop: 16,\r\n                            width: \"100%\",\r\n                            backgroundColor: \"red\",\r\n                            color: \"white\"\r\n                        }}\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                            environment.removeCamera(camera as EventCamera) \r\n                            editor.setCurrentSelectedObject(null)\r\n                        }}\r\n                >Delete Camera\r\n                </Button>\r\n            </div>\r\n        );\r\n}\r\n\r\n","import React from 'react'\r\nimport { Typography } from '@material-ui/core';\r\n\r\ninterface NoSelectedObjectProps {\r\n\r\n}\r\n\r\nexport const NoSelectedObject: React.FC<NoSelectedObjectProps> = ({}) => {\r\n        return (\r\n            <div\r\n                style={{\r\n                    marginTop: 32,\r\n                    width: \"100%\"\r\n                }}\r\n            >\r\n                <Typography variant=\"h5\" style={{color: \"gray\", textAlign: \"center\"}}>No Selected Object</Typography>\r\n            </div>\r\n        );\r\n}","import { Paper, Typography } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Field from '../../model/Field';\r\nimport { EventCamera, EventField } from '../../model/WrappedEventModel';\r\nimport { useEnvironment } from '../Providers';\r\nimport { NumericControl } from './controls/NumericControl';\r\nimport Coordinate from '../../model/Coordinate';\r\n\r\ninterface FieldViewProps {\r\n    field: Field,\r\n    style?: React.CSSProperties\r\n}\r\n\r\nexport const FieldView: React.FC<FieldViewProps> = ({field, style}) => {\r\n        const environment = useEnvironment()\r\n        const [x, setX] = useState(field.getCenter().x)\r\n        const [y, setY] = useState(field.getCenter().y)\r\n        const [width, setWidth] = useState(field.getWidth())\r\n        const [height, setHeight] = useState(field.getHeight())\r\n\r\n        useEffect(() => {\r\n            field.setFromPosition(Coordinate.XY(x,y), width, height)\r\n        }, [x,y,width,height])\r\n\r\n        useEffect(() => {\r\n            let eField = field as EventField\r\n            let callback = (coords: Coordinate[], field: EventField) => {\r\n                setX(field.getCenter().x)\r\n                setY(field.getCenter().y)\r\n                setWidth(field.getWidth())\r\n                setHeight(field.getHeight())\r\n            }\r\n            eField.fieldDimensionsChanged.push(callback)\r\n            return () => {\r\n                let removeIndex = eField.fieldDimensionsChanged.findIndex(element => element === callback)\r\n                eField.fieldDimensionsChanged.splice(removeIndex, 1)\r\n            }\r\n        }, [field])\r\n\r\n        return (<div style={{...style, width: \"100%\", padding: 8}}>\r\n            <Paper\r\n                style={{\r\n                    marginTop: 8,\r\n                    marginBottom: 8,\r\n                    padding: 8,\r\n                    flex: 1,\r\n                }}\r\n            >\r\n                <Typography variant=\"h5\">Field Dimensions</Typography>\r\n                <div style={{display:\"flex\"}}>\r\n                        <NumericControl\r\n                            style={{margin: 4}}\r\n                            color=\"red\"\r\n                            name=\"X\"\r\n                            unit=\"m\"\r\n                            value={x}\r\n                            onChange={(val) => {field.setFromPosition(Coordinate.XY(val,y), width, height)}}\r\n                        />\r\n                        <NumericControl\r\n                            style={{margin: 4}}\r\n                            color=\"green\"\r\n                            name=\"Y\"\r\n                            unit=\"m\"\r\n                            value={y}\r\n                            onChange={(val) => {field.setFromPosition(Coordinate.XY(x,val), width, height)}}\r\n                        />\r\n                </div>\r\n\r\n                <div style={{display:\"flex\"}}>\r\n                        <NumericControl\r\n                            style={{margin: 4}}\r\n                            name=\"Width\"\r\n                            unit=\"m\"\r\n                            value={width}\r\n                            onChange={(val) => {field.setFromPosition(Coordinate.XY(x,y), val, height)}}\r\n                        />\r\n                        <NumericControl\r\n                            style={{margin: 4}}\r\n                            name=\"Height\"\r\n                            unit=\"m\"\r\n                            value={height}\r\n                            onChange={(val) => {field.setFromPosition(Coordinate.XY(x,y), width, val)}}\r\n                        />\r\n                </div>\r\n            </Paper>\r\n            <Paper\r\n                style={{\r\n                    marginTop: 8,\r\n                    marginBottom: 8,\r\n                    padding: 8,\r\n                    flex: 1\r\n                }}\r\n            >\r\n                <Typography variant=\"h5\">Camera Visiblity</Typography>\r\n                {\r\n                    environment.cameras.length > 0 ? environment.cameras.map( camera => {\r\n                        const fieldInCameraProjection = field.in(camera.project())\r\n                        return (<Typography>{(camera as EventCamera).name ?? \"Camera\"}: {fieldInCameraProjection ? \"Yes\" : \"No\"}</Typography>)\r\n                    }) : <Typography>No Cameras Available</Typography>\r\n                }\r\n            </Paper>\r\n\r\n        </div>);\r\n}","import React, { useMemo } from 'react'\r\nimport { EnvironmentRenderer2D } from './2D/EnvironmentRenderer2D'\r\nimport { EnvironmentRenderer3D } from './3D/EnvironmentRenderer3D'\r\nimport { useEditorState } from '../providers/Editor'\r\n\r\nexport type RenderMode = \"2D\" | \"3D\"\r\n\r\ninterface EnvironmentRendererProps {\r\n    style?: React.CSSProperties\r\n}\r\n\r\nexport const EnvironmentRenderer: React.FC<EnvironmentRendererProps> = ({style}) => {\r\n    const editor = useEditorState()\r\n    const env2d = useMemo(() => <EnvironmentRenderer2D />, [])\r\n    const env3d = useMemo(() => <EnvironmentRenderer3D />, [])\r\n\r\n\r\n\r\n    var environmentElement\r\n    if (editor.currentRenderMode == \"2D\") {\r\n        environmentElement = env2d\r\n    } else {\r\n        environmentElement = env3d\r\n    }\r\n\r\n    return (\r\n        <div style={{...style, display: \"flex\"}}>\r\n            {environmentElement}\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useRef, useState } from 'react';\r\nimport Camera from '../../../model/Camera';\r\nimport Coordinate from '../../../model/Coordinate';\r\nimport { EventEnvironment } from '../../../model/WrappedEventModel';\r\nimport { useEnvironment } from '../../Providers';\r\nimport { useEditorState, EditorState } from '../../providers/Editor';\r\n\r\ninterface EnvironmentRendererProps {\r\n    style?: React.CSSProperties,\r\n}\r\n\r\n\r\nfunction clearTranslatedCanvas(ctx: CanvasRenderingContext2D, color: string) {\r\n    const canvas = ctx.canvas\r\n    ctx.fillStyle = color\r\n    ctx.fillRect(-canvas.width/2, -canvas.height / 2, canvas.width, canvas.height)\r\n}\r\n\r\nfunction initializeCanvas(ctx: CanvasRenderingContext2D, divRef: HTMLDivElement, scale: number) {\r\n    const canvas = ctx.canvas\r\n    canvas.width = divRef.offsetWidth\r\n    canvas.height = divRef.offsetHeight\r\n    ctx.translate(canvas.width/2, canvas.height/2)\r\n    ctx.scale(scale,-scale)\r\n}\r\n\r\nfunction getCanvasScale(ctx: CanvasRenderingContext2D): number {\r\n    const transform = ctx.getTransform()\r\n    return transform.a\r\n}\r\n\r\nfunction drawGridLines(ctx: CanvasRenderingContext2D, spacing: number, width: number, color: string) {\r\n    const transform = ctx.getTransform()\r\n    transform.invertSelf()\r\n    const min = transform.transformPoint(new DOMPoint(0,0))\r\n    const max = transform.transformPoint(new DOMPoint(ctx.canvas.width, ctx.canvas.height))\r\n\r\n    ctx.lineWidth = width\r\n    ctx.strokeStyle = color\r\n\r\n    // Draw X Lines\r\n    // MIN X value will be the smallest value, so we must add spacing over the loop\r\n    for (var x = min.x - (spacing-(Math.abs(min.x) % spacing)); x < Math.max(max.x); x += spacing) {\r\n        ctx.beginPath()        \r\n        ctx.moveTo(x, min.y)\r\n        ctx.lineTo(x, max.y)\r\n        ctx.stroke()\r\n    }\r\n\r\n    // Draw Y Lines\r\n    // MIN Y value will be the largest value, so we must subtract spacing over loop\r\n    for (var y = min.y + (spacing-(Math.abs(min.y) % spacing)); y > Math.min(max.y); y -= spacing) {\r\n        ctx.beginPath()\r\n        ctx.moveTo(min.x, y)\r\n        ctx.lineTo(max.x, y)\r\n        ctx.stroke()\r\n    }\r\n\r\n    \r\n}\r\n\r\nfunction drawAxisLines(ctx: CanvasRenderingContext2D, width: number) {    \r\n    // X Axis\r\n    ctx.beginPath()\r\n    ctx.strokeStyle = \"rgb(255,0,0)\"\r\n    ctx.moveTo(-ctx.canvas.width/2, 0)\r\n    ctx.lineTo(ctx.canvas.width/2, 0)\r\n    ctx.stroke()\r\n\r\n    // Y Axis\r\n    ctx.beginPath()\r\n    ctx.strokeStyle = \"rgb(0,255,0)\"\r\n    ctx.moveTo(0, -ctx.canvas.height/2)\r\n    ctx.lineTo(0, ctx.canvas.height/2)\r\n    ctx.stroke()\r\n}\r\n\r\nfunction drawCoordinatePath(ctx: CanvasRenderingContext2D, coordinates: Coordinate[], width?: number, color?: string) {\r\n    if (width != undefined) {\r\n        ctx.lineWidth = width\r\n    }\r\n\r\n    if (color != undefined) {\r\n        ctx.strokeStyle = color\r\n    }\r\n\r\n    ctx.beginPath()\r\n    const startPoint = coordinates[0]\r\n    ctx.moveTo(startPoint.x, startPoint.y )\r\n    coordinates.forEach((coord) => {\r\n        ctx.lineTo(coord.x, coord.y)\r\n    })\r\n    ctx.lineTo(startPoint.x, startPoint.y)\r\n    ctx.stroke()\r\n}\r\n\r\n\r\nfunction drawCamera(ctx: CanvasRenderingContext2D, camera: Camera, camRadius: number, selected: boolean) {\r\n    const pos = camera.getCameraProperties().position\r\n    ctx.moveTo(pos.x, pos.y)\r\n    ctx.beginPath()\r\n    ctx.ellipse(pos.x, pos.y, camRadius, camRadius, 0, 0, 360)\r\n    ctx.fillStyle = selected ? \"blue\" : \"gray\"\r\n    ctx.fill()\r\n}\r\n\r\nfunction drawField(ctx: CanvasRenderingContext2D, projection: Coordinate[], width: number) {\r\n    drawCoordinatePath(ctx, projection, width, \"blue\")\r\n}\r\n\r\nfunction drawCameraProjection(ctx: CanvasRenderingContext2D, projection: Coordinate[], width: number, selected: boolean) {\r\n    drawCoordinatePath(ctx, projection, width, selected ? \"green\" : \"black\")\r\n}\r\n\r\n/**\r\n * Scale a screen value to the current canvas scale.\r\n * Useful when you want to keep all lines a certain width regardless of canvas scale\r\n */\r\nfunction scaleScreenDistance(ctx: CanvasRenderingContext2D, val: number): number {\r\n    const currentScale = getCanvasScale(ctx)\r\n    return val / currentScale\r\n}\r\n\r\nfunction render(ctx: CanvasRenderingContext2D, environment: EventEnvironment, editor: EditorState) {\r\n    // Clear canvas with a white background color\r\n    clearTranslatedCanvas(ctx, \"white\")\r\n    \r\n    // Start by drawing grid lines, with black lines every 5 spaces and gray lines every 1 space\r\n    // Then draw x/y axis in black\r\n\r\n    drawGridLines(ctx, 1, scaleScreenDistance(ctx, 2), \"lightgray\")\r\n    drawGridLines(ctx, 5, scaleScreenDistance(ctx, 2), \"gray\")\r\n    drawAxisLines(ctx, scaleScreenDistance(ctx, 2))\r\n\r\n    var currentSelectedID = \"none\"\r\n    if (editor.currentSelectedObject != null) {\r\n        currentSelectedID = editor.currentSelectedObject.id\r\n    }\r\n    \r\n    if (environment.field != null) {\r\n        drawField(ctx, environment.field!.getPoints(), scaleScreenDistance(ctx, 4))\r\n    }    \r\n\r\n    environment.getEventCameras().forEach((camera) => {\r\n        const projection =  camera.project()\r\n        const selected =  camera.id === currentSelectedID\r\n        drawCameraProjection(ctx, projection, scaleScreenDistance(ctx, 4), selected)\r\n        drawCamera(ctx, camera, scaleScreenDistance(ctx, 6), selected)\r\n    })\r\n}\r\n\r\nconst SCALE_MIN = 15\r\nconst SCALE_MAX = 100\r\n\r\nexport const EnvironmentRenderer2D: React.FC<EnvironmentRendererProps> = ({style}) => {\r\n        const environment = useEnvironment()\r\n        const editor = useEditorState()\r\n        const divRef = useRef<HTMLDivElement>(null)\r\n        const canvasRef = useRef<HTMLCanvasElement>(null)\r\n        const [scale, setScale] = useState(30)\r\n        const prevScale = useRef(scale)\r\n\r\n        // Initialize the canvas\r\n        useEffect(() => {\r\n            const ctx = canvasRef.current.getContext(\"2d\")\r\n            const div = divRef.current\r\n            initializeCanvas(ctx, div, scale)\r\n            div.addEventListener('wheel', (e: WheelEvent) => {\r\n                const isScrollingUp = e.deltaY < 0\r\n                setScale(prevScale => Math.min(Math.max(isScrollingUp ? prevScale + 2 : prevScale - 2, SCALE_MIN), SCALE_MAX))\r\n            })\r\n        }, [])\r\n\r\n\r\n        // Update rendering functions on editor or scale change\r\n        useEffect(() => {\r\n            const ctx = canvasRef.current.getContext(\"2d\")\r\n            const div = divRef.current\r\n            const renderCallback = () => { render(ctx, environment, editor) }\r\n            environment.fieldDimensionsModified.push(renderCallback)\r\n            environment.cameraRenderPropsModified.push(renderCallback)\r\n            \r\n\r\n            window.onresize = () => {\r\n                initializeCanvas(ctx, div, scale)\r\n                renderCallback()\r\n            }\r\n\r\n            if (prevScale.current !== scale) {\r\n                prevScale.current = scale\r\n                initializeCanvas(ctx, div, scale)\r\n            }\r\n            \r\n            renderCallback()\r\n\r\n            return () => {\r\n                let removeIndex = environment.cameraRenderPropsModified.findIndex(element => element === renderCallback)\r\n                let fieldRemoveIndex = environment.fieldDimensionsModified.findIndex(element => element === renderCallback)\r\n                environment.cameraRenderPropsModified.splice(removeIndex, 1)\r\n                environment.fieldDimensionsModified.splice(fieldRemoveIndex, 1)\r\n            }\r\n        }, [scale, editor])\r\n\r\n        return (\r\n            <div ref={divRef} style={{...style, flex: 1}}>\r\n                <canvas width=\"1000\" height=\"1000\" ref={canvasRef}/>\r\n            </div>\r\n            \r\n        );\r\n}","import { glMatrix, mat4, vec3 } from 'gl-matrix';\r\nimport React, { useCallback, useState } from 'react';\r\nimport Environment from '../../../model/Environment';\r\nimport { useEnvironment } from '../../Providers';\r\nimport { CanvasController } from '../CanvasController';\r\nimport { clearGL } from './GLUtilities';\r\nimport { BasicShader } from './shaders/BasicShader';\r\nimport { createMeshVAO, Shader, coordinateToFloat32Array } from './shaders/ShaderUtility';\r\nimport VertexShader from './shaders/ts/VertexShader';\r\nimport Coordinate from '../../../model/Coordinate';\r\nimport { createGridMesh } from '../GridLines';\r\n\r\nfunction initializeCanvas(canvas: HTMLCanvasElement) {\r\n    const gl = canvas.getContext(\"webgl2\");\r\n\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\r\n    gl.viewport(0,0,canvas.width,canvas.height)\r\n    if (gl === null) {\r\n        alert(\"no webgl2 support\")\r\n        return;\r\n    } \t               \r\n}\r\n\r\nfunction render(canvas: HTMLCanvasElement, environment: Environment, shader: Shader) {\r\n    const gl = canvas.getContext(\"webgl2\");\r\n    gl.clearColor(0,0,0,1)\r\n    \r\n\r\n    shader.activate()\r\n\r\n    var mesh = createMeshVAO(gl, new Uint16Array([0,1,3,1,2,3]), coordinateToFloat32Array(environment.field.getPoints()), new Float32Array([1,0,0,0,1,0,0,0,1,1,1,1]))\r\n    mesh.drawMode = gl.TRIANGLES \r\n\r\n    var worldMatrix = new Float32Array(16);\r\n    var viewMatrix = new Float32Array(16);\r\n    var projMatrix = new Float32Array(16);\r\n    console.log(mesh.indexCount)\r\n    \r\n    mat4.identity(worldMatrix)\r\n    mat4.lookAt(viewMatrix, [5,-10,10], [0,0,0], [0,0,1])\r\n    mat4.perspective(projMatrix, glMatrix.toRadian(45), canvas.width / canvas.height, 0.1, 100)\r\n\r\n    gl.uniformMatrix4fv(VertexShader.getUniformLocation(gl, shader.program, \"worldMatrix\"), false, worldMatrix)\r\n    gl.uniformMatrix4fv(VertexShader.getUniformLocation(gl, shader.program, \"viewMatrix\"), false, viewMatrix)\r\n    gl.uniformMatrix4fv(VertexShader.getUniformLocation(gl, shader.program, \"projMatrix\"), false, projMatrix)\r\n\r\n\r\n    clearGL(gl)\r\n    var gridLines = createGridMesh(gl, 25, 0.01, 5, 1)\r\n    shader.renderMesh(mesh)\r\n    shader.renderMesh(gridLines)\r\n    shader.deactivate()\r\n\r\n}\r\n\r\n\r\ninterface EnvironmentRenderer3DProps {\r\n\r\n}\r\n\r\nexport const EnvironmentRenderer3D: React.FC<EnvironmentRenderer3DProps> = ({}) => {\r\n        const environment = useEnvironment();\r\n        const [shader, setShader]= useState<Shader>(null)\r\n\r\n        const initializeCallback = useCallback((canvas: HTMLCanvasElement) => {\r\n            if (shader === null) {\r\n                setShader(new BasicShader(canvas.getContext(\"webgl2\")))\r\n            } else {\r\n                initializeCanvas(canvas)\r\n            }\r\n            \r\n        }, [shader])\r\n\r\n        const renderCallback = useCallback((canvas: HTMLCanvasElement) => {\r\n\r\n            if (shader !== null) {\r\n                render(canvas, environment, shader)\r\n            }\r\n        }, [shader])\r\n\r\n        // Update rendering functions on editor or scale change\r\n        return (<CanvasController initializeCanvas={initializeCallback} render={renderCallback} />);\r\n}","module.exports = glMatrix;","import React, { useRef, useEffect } from 'react'\r\nimport { useEnvironment } from '../Providers';\r\n\r\ninterface CanvasControllerProps {\r\n    initializeCanvas: (canvas: HTMLCanvasElement) => void,\r\n    render: (canvas: HTMLCanvasElement) => void,\r\n}\r\n\r\nexport const CanvasController: React.FC<CanvasControllerProps> = ({initializeCanvas, render}) => {\r\n        const environment = useEnvironment();\r\n        const divRef = useRef<HTMLDivElement>(null);\r\n        const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n        useEffect(() => {\r\n            const init = () => {\r\n                // Stetch canvas to div width/height\r\n                canvasRef.current.width = divRef.current.offsetWidth\r\n                canvasRef.current.height = divRef.current.offsetHeight\r\n\r\n                initializeCanvas(canvasRef.current)\r\n            }\r\n\r\n            init()\r\n            render(canvasRef.current)\r\n\r\n            window.onresize = () => {\r\n                init()\r\n                render(canvasRef.current)\r\n            }\r\n\r\n            const envChangeCallback = () => render(canvasRef.current)\r\n            environment.cameraRenderPropsModified.push(envChangeCallback)\r\n            environment.fieldDimensionsModified.push(envChangeCallback)\r\n\r\n            return () => {\r\n                const rmIndexField = environment.fieldDimensionsModified.findIndex(e => e === envChangeCallback)\r\n                const rmIndexRender = environment.cameraRenderPropsModified.findIndex(e => e === envChangeCallback)\r\n                environment.cameraRenderPropsModified.splice(rmIndexRender, 1)\r\n                environment.fieldDimensionsModified.splice(rmIndexField, 1)\r\n            }\r\n        }, [initializeCanvas, render])\r\n\r\n        return (\r\n            <div ref={divRef} style={{flex: 1}}>\r\n                <canvas ref={canvasRef} width=\"1000\" height=\"1000\"/>\r\n            </div>\r\n        );\r\n}","import { Shader, MeshVAO } from \"./ShaderUtility\";\r\nimport VertexShader from \"./ts/VertexShader\";\r\nimport FragmentShader from \"./ts/FragmentShader\";\r\n\r\nexport class BasicShader extends Shader {\r\n    constructor(gl: WebGL2RenderingContext) {\r\n        super(gl, VertexShader.src, FragmentShader.src, true)\r\n        this.gl.useProgram(null)\r\n\r\n    }\r\n\r\n    renderMesh(mesh: MeshVAO) {\r\n        super.renderMesh(mesh)\r\n    }\r\n}","import { MeshVAO, createMeshVAO } from \"./3D/shaders/ShaderUtility\";\r\n\r\nexport function createGridMesh(gl: WebGL2RenderingContext, range: number, z:number, spacing: number, subspacing?: number): MeshVAO {\r\n    var vertexArray:number[] = []\r\n    var colorArray:number[] = []\r\n    \r\n    if (subspacing !== undefined) {\r\n        // Draw x lines\r\n        for (var index = -range; index<=range; index += subspacing) {\r\n            vertexArray.push(-range, index, z, range, index, z)\r\n            colorArray.push(...Array(6).fill(0.75))\r\n        }\r\n        \r\n        // Draw y lines\r\n        for (var index = -range; index<=range; index += subspacing) {\r\n            vertexArray.push(index, -range, z, index, range, z)\r\n            colorArray.push(...Array(6).fill(0.75))\r\n        }\r\n    }\r\n\r\n    // Draw x lines\r\n    for (var index = -range; index<=range; index += spacing) {\r\n        vertexArray.push(-range, index, z, range, index, z)\r\n        colorArray.push(...Array(6).fill(0.25))\r\n    }\r\n    \r\n    // Draw y lines\r\n    for (var index = -range; index<=range; index += spacing) {\r\n        vertexArray.push(index, -range, z, index, range, z)\r\n        colorArray.push(...Array(6).fill(0.25))\r\n    }\r\n\r\n    // Draw colored axis lines\r\n    \r\n    // X\r\n    vertexArray.push(-range,0,z,range,0,z)\r\n    colorArray.push(1,0,0,1,0,0)\r\n\r\n    // Y\r\n    vertexArray.push(0,-range,z,0,range,z)\r\n    colorArray.push(0,1,0,0,1,0)\r\n\r\n    // Z\r\n    vertexArray.push(0,0,-range,0,0,range)\r\n    colorArray.push(0,0,1,0,0,1)\r\n\r\n    var vao = createMeshVAO(gl, null, new Float32Array(vertexArray), new Float32Array(colorArray))\r\n    return vao\r\n}","import { Button, Typography, Paper } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Camera, { DefaultCameraProperties } from '../../model/Camera';\r\nimport { EventCamera, EventField } from '../../model/WrappedEventModel';\r\nimport { EnvironmentListing } from './EnvironmentListing';\r\nimport Coordinate from '../../model/Coordinate';\r\nimport { useEditorState } from '../providers/Editor';\r\nimport { useEnvironment } from '../Providers';\r\n\r\ninterface EnvironmentViewProps {\r\n    style?: React.CSSProperties\r\n}\r\n\r\nexport const EnvironmentView: React.FC<EnvironmentViewProps> = ({style}) => {\r\n        const environment = useEnvironment()\r\n        const editor = useEditorState()\r\n        const [field, setField] = useState<EventField>(environment.getEventField())\r\n        const [cameras, setCameras] = useState<EventCamera[]>(environment.getEventCameras())\r\n\r\n        useEffect(() => {\r\n            const callback = (camera: Camera) => {\r\n                setCameras([...environment.getEventCameras()])\r\n            }\r\n\r\n            const fieldCallback = (coords: Coordinate[], eField: EventField) => {\r\n                setField(eField)\r\n            }\r\n            environment.fieldDimensionsModified.push(fieldCallback)\r\n            environment.cameraNonRenderPropsModified.push(callback)\r\n        }, [])\r\n\r\n        \r\n        return (\r\n            <div \r\n                style={style}\r\n                onClick={e => {\r\n                    // Unselect object if clicked outside \r\n                    if (e.target !== e.currentTarget) { return }\r\n                    editor.setCurrentSelectedObject(null)\r\n                }}\r\n            >\r\n                <EnvironmentListing identifiable={field} materialIcon=\"grid_on\" name=\"Field\" />\r\n                <Paper \r\n                    elevation={0}\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n\r\n                    style={{\r\n                        display: \"flex\",\r\n                        verticalAlign: \"center\",\r\n                        paddingLeft: 8\r\n                    }}\r\n                    >\r\n                    <Typography variant=\"subtitle1\" style={{flex: 1}}>CAMERAS</Typography>\r\n                    <Button \r\n                        onClick={() => {\r\n                            environment.addCamera(new EventCamera(DefaultCameraProperties))    \r\n                        }}\r\n                    >Add Camera</Button>\r\n                </Paper>\r\n                {\r\n                    cameras.map((camera) => {\r\n                        return (<EnvironmentListing identifiable={camera} materialIcon=\"videocam\" name={camera.name ?? \"Camera\"} />)\r\n                    })\r\n                }      \r\n            </div>\r\n        );\r\n}","import React from 'react'\r\nimport { Identifiable } from '../../model/WrappedEventModel';\r\nimport { Typography } from '@material-ui/core';\r\nimport { useEditorState, isIdentifiableSelected } from '../providers/Editor';\r\n\r\ninterface SceneListingProps {\r\n    identifiable: Identifiable,\r\n    materialIcon: string,\r\n    name: string,\r\n}\r\n\r\nexport const EnvironmentListing: React.FC<SceneListingProps> = ({identifiable, materialIcon, name}) => {\r\n        const editor = useEditorState()\r\n        const selected = isIdentifiableSelected(identifiable)\r\n        return (\r\n            <div\r\n                onClick={() => { \r\n                    if (identifiable == editor.currentSelectedObject) {\r\n                        editor.setCurrentSelectedObject(null)\r\n                    } else {\r\n                        editor.setCurrentSelectedObject(identifiable )\r\n                    }\r\n                }}\r\n                style={{\r\n                    flexDirection: \"row\", \r\n                    display:\"flex\",\r\n                    backgroundColor: selected ? \"lightgray\" : undefined,\r\n                    padding: 8\r\n                }}\r\n            >\r\n                <i className=\"material-icons\">{materialIcon}</i>\r\n                <Typography style={{marginLeft: 8}}>{name}</Typography>\r\n            </div>\r\n        );\r\n}"],"sourceRoot":""}